function init(self)
	msg.post(".", "acquire_input_focus")
	
	self.count = 0
	self.started = false
	self.blocked = false
	local end_node = gui.get_node("end")
	gui.set_enabled(end_node, false)
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed and not self.blocked then
		local node = gui.get_node("button")
		if gui.pick_node(node, action.x, action.y) then
			if not self.started then
				msg.post("/level", "start_game")
				local text_node = gui.get_node("button_text")
				gui.set_text(text_node, "Restart")
				self.started = true
			else
				msg.post("/level", "restart_game")
			end
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("increase_count") then
		self.count = self.count + 1
		local count_node = gui.get_node("count")
		gui.set_text(count_node, "Count: " .. self.count)
		if self.count == 50 then
			msg.post("/level", "block_input")
			local node = gui.get_node("end")
			local score_node = gui.get_node("end_score")
			local end_text_node = gui.get_node("end_text")
			gui.set_text(end_text_node, "You Win!")
			gui.set_text(score_node, "Your score: " .. self.count)
			gui.set_enabled(node, true)
		end
	elseif message_id == hash("reset_count") then
		self.count = 0
		local count_node = gui.get_node("count")
		gui.set_text(count_node, "Count: " .. self.count)
	elseif message_id == hash("show_end") then
		local node = gui.get_node("end")
		local score_node = gui.get_node("end_score")
		local end_text_node = gui.get_node("end_text")
		gui.set_text(end_text_node, "Game ended")
		gui.set_text(score_node, "Your score: " .. self.count)
		gui.set_enabled(node, true)
	elseif message_id == hash("hide_end") then
		local count_node = gui.get_node("count")
		self.count = 0
		gui.set_text(count_node, "Count: " .. self.count)
		
		local node = gui.get_node("end")
		gui.set_enabled(node, false)
	elseif message_id == hash("block_input") then
		self.blocked = true
	elseif message_id == hash("unblock_input") then
		self.blocked = false
	end
end
